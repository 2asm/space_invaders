//go:build js && wasm

package game

type alienKind int

const (
	_I1 alienKind = iota + 1
	_I2
	_I3
	_UFO
)

type alienState int

const (
	_OPENED alienState = iota + 1
	_CLOSED
)

type alien struct {
	id            int // index
	kind          alienKind
	state         alienState
	baseX, baseY  int // top-left corner
	height, width int
	died          bool
}

// aliend box size 10x12
var (
	alienYOffset = []int{
		_I1:  2,
		_I2:  1,
		_I3:  1,
		_UFO: -1, // todo
	}
	alienXOffset = []int{
		_I1:  1,
		_I2:  1,
		_I3:  1,
		_UFO: -1, // todo
	}
	alienHeight = []int{
		_I1:  8,
		_I2:  8,
		_I3:  8,
		_UFO: -1, // todo
	}
	alienColor = []string{
		_I1:  "lightblue",
		_I2:  "orange",
		_I3:  "purple",
		_UFO: "black", // todo
	}
	alienWidth = []int{
		_I1:  8,
		_I2:  10,
		_I3:  10,
		_UFO: -1, // todo
	}

	alienPoints = []int{
		_I1:  30,
		_I2:  40,
		_I3:  50,
		_UFO: -1, // todo
	}

	baseAlien = [][][]coord{
		_I1: {
			{ // closed
				//                         {0, 3}, {0, 4},
				//                 {1, 2}, {1, 3}, {1, 4}, {1, 5},
				//         {2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6},
				// {3, 0}, {3, 1},         {3, 3}, {3, 4},         {3, 6}, {3, 7},
				// {4, 0}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7},
				//                 {5, 2},                 {5, 5},
				//         {6, 1},                                 {6, 6},
				//                 {7, 2},                 {7, 5},
				{0, 3}, {0, 4},
				{1, 2}, {1, 3}, {1, 4}, {1, 5},
				{2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6},
				{3, 0}, {3, 1}, {3, 3}, {3, 4}, {3, 6}, {3, 7},
				{4, 0}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7},
				{5, 2}, {5, 5},
				{6, 1}, {6, 6},
				{7, 2}, {7, 5},
			},
			{ // opened
				//                         {0, 3}, {0, 4},
				//                 {1, 2}, {1, 3}, {1, 4}, {1, 5},
				//         {2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6},
				// {3, 0}, {3, 1},         {3, 3}, {3, 4},         {3, 6}, {3, 7},
				// {4, 0}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7},
				//                 {5, 2},                 {5, 5},
				//         {6, 1}, {6, 2}, {6, 3}, {6, 4}, {6, 5}, {6, 6},
				// {7, 0},         {7, 2},                 {7, 5},         {7, 7},
				{0, 3}, {0, 4},
				{1, 2}, {1, 3}, {1, 4}, {1, 5},
				{2, 1}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6},
				{3, 0}, {3, 1}, {3, 3}, {3, 4}, {3, 6}, {3, 7},
				{4, 0}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7},
				{5, 2}, {5, 5},
				{6, 1}, {6, 2}, {6, 3}, {6, 4}, {6, 5}, {6, 6},
				{7, 0}, {7, 2}, {7, 5}, {7, 7},
			},
		},
		_I2: {
			{ // closed
				//                 {0, 2},                                 {0, 7},
				//                         {1, 3},                 {1, 6},
				//                 {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7},
				//         {3, 1}, {3, 2},         {3, 4}, {3, 5},         {3, 7}, {3, 8},
				// {4, 0}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {4, 9},
				// {5, 0},         {5, 2}, {5, 3}, {5, 4}, {5, 5}, {5, 6}, {5, 7},         {5, 9},
				// {6, 0},         {6, 2},                                 {6, 7},         {6, 9},
				//                         {7, 3},                 {7, 6},
				{0, 2}, {0, 7},
				{1, 3}, {1, 6},
				{2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7},
				{3, 1}, {3, 2}, {3, 4}, {3, 5}, {3, 7}, {3, 8},
				{4, 0}, {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8}, {4, 9},
				{5, 0}, {5, 2}, {5, 3}, {5, 4}, {5, 5}, {5, 6}, {5, 7}, {5, 9},
				{6, 0}, {6, 2}, {6, 7}, {6, 9},
				{7, 3}, {7, 6},
			},
			{ // opened
				//                 {0, 2},                                 {0, 7},
				// {1, 0},                 {1, 3},                 {1, 6},                 {1, 9},
				// {2, 0},         {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7},         {2, 9},
				// {3, 0}, {3, 1}, {3, 2},         {3, 4}, {3, 5},         {3, 7}, {3, 8}, {3, 9},
				//         {4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8},
				//                 {5, 2}, {5, 3}, {5, 4}, {5, 5}, {5, 6}, {5, 7},
				//                 {6, 2},                                 {6, 7},
				//         {7, 1},                                                 {7, 8},
				{0, 2}, {0, 7},
				{1, 0}, {1, 3}, {1, 6}, {1, 9},
				{2, 0}, {2, 2}, {2, 3}, {2, 4}, {2, 5}, {2, 6}, {2, 7}, {2, 9},
				{3, 0}, {3, 1}, {3, 2}, {3, 4}, {3, 5}, {3, 7}, {3, 8}, {3, 9},
				{4, 1}, {4, 2}, {4, 3}, {4, 4}, {4, 5}, {4, 6}, {4, 7}, {4, 8},
				{5, 2}, {5, 3}, {5, 4}, {5, 5}, {5, 6}, {5, 7},
				{6, 2}, {6, 7},
				{7, 1}, {7, 8},
			},
		},
		_I3: {
			{ // closed
				//                             {0, 3}, {0, 4}, {0, 5}, {0, 6},
				//             {1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8},
				//     {2, 0}, {2, 1},                 {2, 4}, {2, 5},                 {2, 8}, {2, 9},
				//     {3, 0}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {3, 9},
				//                     {4, 2}, {4, 3},                 {4, 6}, {4, 7},
				//             {5, 1}, {5, 2},         {5, 4}, {5, 5},         {5, 7}, {5, 8},
				//     {6, 0},                                                                 {6, 9},
				//             {7, 1},                                                 {7, 8},
				{0, 3}, {0, 4}, {0, 5}, {0, 6},
				{1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8},
				{2, 0}, {2, 1}, {2, 4}, {2, 5}, {2, 8}, {2, 9},
				{3, 0}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {3, 9},
				{4, 2}, {4, 3}, {4, 6}, {4, 7},
				{5, 1}, {5, 2}, {5, 4}, {5, 5}, {5, 7}, {5, 8},
				{6, 0}, {6, 9},
				{7, 1}, {7, 8},
			},
			{ // opened
				//                             {0, 3}, {0, 4}, {0, 5}, {0, 6},
				//             {1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8},
				//     {2, 0}, {2, 1},                 {2, 4}, {2, 5},                 {2, 8}, {2, 9},
				//     {3, 0}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {3, 9},
				//                     {4, 2}, {4, 3},                 {4, 6}, {4, 7},
				//                     {5, 2},         {5, 4}, {5, 5},         {5, 7},
				//     {6, 0}, {6, 1},                                                 {6, 8}, {6, 9},
				//
				{0, 3}, {0, 4}, {0, 5}, {0, 6},
				{1, 1}, {1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {1, 7}, {1, 8},
				{2, 0}, {2, 1}, {2, 4}, {2, 5}, {2, 8}, {2, 9},
				{3, 0}, {3, 1}, {3, 2}, {3, 3}, {3, 4}, {3, 5}, {3, 6}, {3, 7}, {3, 8}, {3, 9},
				{4, 2}, {4, 3}, {4, 6}, {4, 7},
				{5, 2}, {5, 4}, {5, 5}, {5, 7},
				{6, 0}, {6, 1}, {6, 8}, {6, 9},
			},
		},
		_UFO: { // todo
			{},
			{},
		},
	}
)

func (a *alien) getBaseCoordinates() []coord {
	return baseAlien[a.kind][a.state]
}

func newAlien(id int, kind alienKind, baseX, baseY int) *alien {
	return &alien{id: id, kind: kind, baseX: baseX, baseY: baseY}
}

func (a *alien) moveLeft(steps int) {
	a.baseY -= steps
}

func (a *alien) moveRight(steps int) {
	a.baseY += steps
}

func (a *alien) switchState() {
	a.state ^= 1
}

func (a *alien) launchMissile() *missile {
	return newMissile(a.baseX+alienHeight[a.kind]-1, a.baseY+alienWidth[a.kind]/2, alienMissile)
}

func (a *alien) render(state alienState) {
	gameCanvas.Set("fillStyle", alienColor[a.kind])
	for _, c := range baseAlien[a.kind][state] {
		gameCanvas.Call("fillRect", (a.baseY+c.y)*scale, (a.baseX+c.x)*scale, scale, scale)
	}
	gameCanvas.Call("fill")
}

func (a *alien) clear(state alienState) {
	for _, c := range baseAlien[a.kind][state] {
		gameCanvas.Call("clearRect", (a.baseY+c.y)*scale, (a.baseX+c.x)*scale, scale, scale)
	}
	gameCanvas.Call("fill")
}
